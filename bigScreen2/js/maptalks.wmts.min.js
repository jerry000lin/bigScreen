!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("maptalks")):"function"==typeof define&&define.amd?define(["exports","maptalks"],t):t(e.maptalks=e.maptalks||{},e.maptalks)}(this,function(e,t){"use strict";function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):function(e,t){for(var o=Object.getOwnPropertyNames(t),r=0;r<o.length;r++){var n=o[r],i=Object.getOwnPropertyDescriptor(t,n);i&&i.configurable&&void 0===e[n]&&Object.defineProperty(e,n,i)}}(e,t))}var r=t.Util.extend,n={service:"WMTS",request:"GetTile",layer:"",tilematrixset:"",format:"image/png",version:"1.0.0"},i=function(e){function t(t,o){var i;i=e.call(this,t)||this;var p=r({},n);for(var a in o)a in i.options||(p[a]=o[a]);var s=o.urlTemplate;return o.urlTemplate=s+function(e,t,o){var r=[];for(var n in e)r.push(encodeURIComponent(o?n.toUpperCase():n)+"="+encodeURIComponent(e[n]));return(t&&-1!==t.indexOf("?")?"&":"?")+r.join("&")}(p,s,this.options.uppercase)+"&tileMatrix={z}&tileRow={y}&tileCol={x}",i.setOptions(o),i.setZIndex(o.zIndex),i}o(t,e);var i=t.prototype;return i.toJSON=function(){return{type:"WMTSTileLayer",id:this.getId(),options:this.config()}},i.fromJSON=function(e){return e&&"WMTSTileLayer"===e.type?new t(e.id,e.options):null},t}(t.TileLayer);i.registerJSONType("WMTSTileLayer"),i.mergeOptions({uppercase:!1}),e.WMTSTileLayer=i,Object.defineProperty(e,"__esModule",{value:!0}),"undefined"!=typeof console&&console.log("maptalks.wmts v0.1.0, requires maptalks@^0.39.0.")});